- name: Configuration Kubernetes Cluster
  hosts: masters, workers
  remote_user: root

  tasks:
    - name: Disable Swap
      shell: |
        swapoff -a
        sed -ri '/swap/s/^/#/' /etc/fstab

    - name: Forwarding IPv4 and letting iptables see bridged traffic
      shell: |
        cat <<EOF | tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF
        modprobe overlay
        modprobe br_netfilter

        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF

    - name: View and change system parameters
      shell: sysctl --system

    - name: Install Containerd
      import_role:
        name: containerd
    
    - name: Install runc
      import_role:
        name: runc
    
    - name: Install CNI plugins
      import_role:
        name: runc

    - name: Config Cgroup
      shell: |
        mkdir -p /etc/containerd
        cat <<EOF | tee /etc/containerd/config.toml
        $(containerd config default)
        EOF
        sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml

    - name: Restart and Enable containerd.service
      systemd:
        name: containerd
        state: restarted
        enabled: true
        daemon_reload: true

    - name: Install kubeadm, kubelet and kubectl
      import_role:
        name: kube

- name: Initialize k8s cluster
  hosts: masters
  remote_user: root

  tasks:
    - name: Pull image
      shell: kubeadm config images pull

    - name: Init k8s master
      shell: |
        kubeadm init \
          --control-plane-endpoint=172.16.1.10 \
          --upload-certs \
          --pod-network-cidr=10.1.0.0/23 \
          --kubernetes-version=v1.30.0
      run_once: yes
      delegate_to: 172.16.1.10

    - name: Copy kube config
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      run_once: yes
      delegate_to: 172.16.1.10
    
    - name: Install calico
      shell: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/calico.yaml
      run_once: yes
      delegate_to: 172.16.1.10

    - name: Print join command
      shell: kubeadm token create --print-join-command
      register: join_command
      run_once: yes
      delegate_to: 172.16.1.10

    - name: Copy join command to local
      become: no
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="/tmp/join-command" mode=0777
      run_once: yes
      delegate_to: 172.16.1.10

    # - name: Generate certificate key
    #   shell: kubeadm init phase upload-certs --upload-certs
    #   register: kubernetes_certificate_key
    #   run_once: yes
    #   delegate_to: "172.20.10.21"

    # - name: Execute master join command
    #   when: inventory_hostname != "172.20.10.21"
    #   shell: "{{ join_command.stdout_lines[0] }} --control-plane --certificate-key {{ kubernetes_certificate_key.stdout_lines[2] }} --apiserver-advertise-address={{ inventory_hostname }}"

- name: Join k8s cluster
  hosts: workers
  remote_user: root
  tasks:
    - name: Copy join command
      copy:
        src: /tmp/join-command
        dest: /tmp/join-command
        mode: 0777

    - name: Join k8s cluster
      shell: sh /tmp/join-command
